def getAccountID() 
{
    if ( "${GIT_BRANCH}" == "redshift_dev" ) 
    {
       return "${DEV_AWS_ACCOUNT_ID}"
    }
    else if ( "${GIT_BRANCH}" == "test" ) 
    {
        return "${TEST_AWS_ACCOUNT_ID}"
    }
    else 
    {
       return ""
    }
}

pipeline 
{ 
   agent any
   
   environment 
   {

    AWS_ACCOUNT_ID = getAccountID()
    IAM_ROLE="adminRole"
   }

   stages 
   {
     stage('AWS-Config') 
     { 
        steps 
        {             
           sh """
                echo \$(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
                \$(aws sts assume-role --role-arn arn:aws:iam::\${AWS_ACCOUNT_ID}:role/\${IAM_ROLE} \
                --role-session-name terraform --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
                --output text)) | tr ' ' '\n' > \${WORKSPACE}/.aws-creds
           """
        }
     }   
     stage('Terraform Init-Validate-Plan') 
     { 
        steps 
        {             
           sh """
                set -a
                source \${WORKSPACE}/.aws-creds
                set +a
                
                # Terraform commands to initialize, validate and run a plan of terraform code 
                cd terraform/env/${GIT_BRANCH}
                terraform init -backend-config="key=terraform-tfstate/env/${GIT_BRANCH}/redshift/terraform.tfstate" -no-color
                terraform validate -no-color
                terraform plan  -no-color
           """
        }
     }

     stage('Waiting for Approvals') 
     {
        steps
        {
            input('Plan Validated? Please approve to create resources in AWS?')	  
        }
     }    
     
     
     stage('Terraform Apply') 
     { 
        steps 
        {         
            sh """
                set -a 
                source \${WORKSPACE}/.aws-creds
                set +a

                # Run terraform apply to create resources on target cloud
                cd terraform/env/${GIT_BRANCH} 
                terraform apply -auto-approve -no-color
           """
        }
     }
   }
}