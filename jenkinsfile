pipeline { 
  
   agent any
   
   stages {
     stage('Terraform Init-Validate-Plan') { 
        steps { 
        script{
            if ( "${GIT_BRANCH}" == "dev" ) 
            {
              AWS_ACCOUNT_ID="517446614341"
              IAM_ROLE="adminRole"
            } 
            else 
            {
            AWS_ACCOUNT_ID=""
            IAM_ROLE=""
            }
        }        
           withAWS(roleAccount: "${AWS_ACCOUNT_ID}" , role: "${IAM_ROLE}") {
           sh """
                cd terraform/env/${GIT_BRANCH}
                terraform init -backend-config="key=terraform-tfstate/env/${GIT_BRANCH}/terraform.tfstate" -no-color
                terraform validate -no-color
                terraform plan  -no-color
           """    
        }
     }
     }
     
     
stage('Waiting for Approvals') {
            
      steps{
          input('Plan Validated? Please approve to create resources in AWS?')
			  }
      }    
     
     
     stage('Terraform Apply') { 
        steps { 
        script{
            if ( "${GIT_BRANCH}" == "dev" ) 
            {
              AWS_ACCOUNT_ID="517446614341"
              IAM_ROLE="adminRole"
            } 
            else 
            {
            AWS_ACCOUNT_ID=""
            IAM_ROLE=""
            }
        }        
           withAWS(roleAccount: "${AWS_ACCOUNT_ID}" , role: "${IAM_ROLE}") {
           sh """
                cd terraform/env/${GIT_BRANCH} 
                terraform apply -auto-approve -no-color
           """        
        }
      }
      }

     stage('Run Glue Workflow Pipeline') { 
        steps { 
        script{
            if ( "${GIT_BRANCH}" == "dev" ) 
            {
              AWS_ACCOUNT_ID="517446614341"
              IAM_ROLE="adminRole"
            } 
            else 
            {
            AWS_ACCOUNT_ID=""
            IAM_ROLE=""
            }
        }        
           withAWS(roleAccount: "${AWS_ACCOUNT_ID}" , role: "${IAM_ROLE}") {
           sh """
                cd terraform/env/${GIT_BRANCH}
                region_id=`cat terraform.tfvars | grep -w region | head -1 | cut -d "=" -f2 | tr -d '"' | tr -d ' '`
                glue_workflow=`cat terraform.tfvars | grep -w glue_workflow_name | head -1 | cut -d "=" -f2 | tr -d '"' | tr -d ' '`
                aws glue start-workflow-run --name ${glue_workflow} --region ${region_id}
           """
        }
     }

   	}
    }
   }
