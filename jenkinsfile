pipeline { 
  
   agent any
   
   stages {
     stage('Terraform Init-Validate-Plan') { 
        steps { 
        script{
            if ( "${GIT_BRANCH}" == "dev" ) 
            {
              AWS_ACCOUNT_ID="517446614341"
              IAM_ROLE="adminRole"
            } 
            else 
            {
            AWS_ACCOUNT_ID=""
            IAM_ROLE=""
            }
        }        
           withAWS(roleAccount: "${AWS_ACCOUNT_ID}" , role: "${IAM_ROLE}") {
           sh '''
                cd terraform/env/${GIT_BRANCH}
                terraform init -backend-config="key=terraform-tfstate/env/${GIT_BRANCH}/terraform.tfstate" -no-color
                terraform validate -var="region=${params.region}" -no-color
                terraform plan -var="region=${params.region}" -no-color
           '''    
        }
     }
     }
     
     
stage('Waiting for Approvals') {
            
      steps{
          input('Plan Validated? Please approve to create resources in AWS?')
			  }
      }    
     
     
     stage('Terraform Apply') { 
        steps { 
        script{
            if ( "${GIT_BRANCH}" == "dev" ) 
            {
              AWS_ACCOUNT_ID="517446614341"
              IAM_ROLE="adminRole"
            } 
            else 
            {
            AWS_ACCOUNT_ID=""
            IAM_ROLE=""
            }
        }        
           withAWS(roleAccount: "${AWS_ACCOUNT_ID}" , role: "${IAM_ROLE}") {
           sh 'cd terraform/env/${GIT_BRANCH} && terraform apply -var="region=${params.region}" -auto-approve -no-color'
        }
      }
      }

     stage('Run Glue Workflow Pipeline') { 
        steps { 
        script{
            if ( "${GIT_BRANCH}" == "dev" ) 
            {
              AWS_ACCOUNT_ID="517446614341"
              IAM_ROLE="adminRole"
            } 
            else 
            {
            AWS_ACCOUNT_ID=""
            IAM_ROLE=""
            }
        }        
           withAWS(roleAccount: "${AWS_ACCOUNT_ID}" , role: "${IAM_ROLE}") {
           sh "aws glue start-workflow-run --name cfm-etl-workflow --region ${params.region}"
        }
     }

   	}
    }
parameters {
    #choice(choices: ['dev', 'prod'], description: 'What environment?', name: 'environment')
    string(name: 'region', description: 'Region to deploy Resources')
}    

   }
